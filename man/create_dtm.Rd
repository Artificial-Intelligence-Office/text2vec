% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dtm.R
\name{create_dtm}
\alias{create_dtm}
\title{Document-Term Matrix construction.}
\usage{
create_dtm(itoken_list, vectorizer, type = c("dgCMatrix", "dgTMatrix",
  "lda_c"), ...)
}
\arguments{
\item{itoken_list}{\code{list} of iterators over tokens - \code{itoken}.
Each element is a list of tokens = tokenized and normalized strings.}

\item{vectorizer}{\code{function} vectorizer function.}

\item{type}{character, one of \code{c("dgCMatrix", "dgTMatrix", "lda_c")}.
"lda_c" - Blei's lda-c format (list of 2*doc_terms_size),
see \url{https://www.cs.princeton.edu/~blei/lda-c/readme.txt}}

\item{...}{- arguments to \link{foreach} function which is used to iterate
over \code{itoken_list} under the hood.}
}
\value{
Document-Term Matrix
}
\description{
High-level function for Document-Term Matrix construction.
If parallel backend is registered, it will construct DTM in multiple threads.
}
\details{
User should keep in mind, that he/she should split data itself and
provide list of \link{itoken} iterators. Each element of \code{itoken_list}
will be handled at separate thread and at the end they will be combined.
}
\examples{
\dontrun{
data("movie_review")
# set to number of cores on your machine
N_WORKERS <- 1
splits <- split(movie_review$review, rep(1:N_WORKERS, each = nrow(movie_review) / N_WORKERS ))
jobs <- lapply(splits, itoken, tolower, word_tokenizer)
vectorizer <- hash_vectorizer()
doParallel::registerDoParallel(N_WORKERS)
dtm <- create_dtm(jobs, vectorizer, type = 'dgTMatrix')
}
}
\seealso{
\link{itoken}
}

