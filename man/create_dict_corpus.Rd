% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/corpus.R
\name{create_dict_corpus}
\alias{create_dict_corpus}
\title{RAM-friendly streaming dictionary based corpus construction.}
\usage{
create_dict_corpus(src, preprocess_fun = identity,
  tokenizer = simple_tokenizer, stemming_fun = identity, batch_size = 10,
  limit = NULL, progress = T)
}
\arguments{
\item{src}{- generally \link{connection} object.}

\item{preprocess_fun}{- \code{function} which takes \code{character vector},
do some text preprocessing (usually cleaning) and return \code{character vector}.
see \link{simple_preprocess} function for example.}

\item{stemming_fun}{- - \code{function} which takes \code{character vector},
stem each word and return \code{character vector}.
See \link{SnowballC::wordStem} for example.}

\item{batch_size}{- \code{integer} - how many documents we want to convert
into vector representation per one fetching from connection.
Generally setting this to large number speeding up DTM construction,
but more RAM intensive.}

\item{limit}{- \code{integer} - maximum number of documents we want to
transform into vector representation.}

\item{progress}{- \code{logical} - show progress bar}

\item{simple_tokenizer}{- \code{function} which takes \code{character vector},
split it into tokens and return \link{list} of \code{character vector}s.}
}
\description{
RAM-friendly streaming dictionary based corpus construction.
}

