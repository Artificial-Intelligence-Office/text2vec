% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/matrix.R
\name{dtm_get_tf}
\alias{dtm_get_tf}
\title{TermFrequency scaling matrix construction from Document-Term-Matrix}
\usage{
dtm_get_tf(dtm, type = c("tf", "binary"))
}
\arguments{
\item{dtm}{\link{sparseMatrix} - Document-Term-Matrix}

\item{type}{type of scaling. Formula for tf :
\deqn{tf = \fraq {# word appears in document}{# words in document}}{%
tf = (# word appears in document) / (# words in document) }
\deqn{tf = {Does word appears in document (binary encoding): 0 if not appears, 1 if appears}}{%
tf = (Does word appears in document (binary encoding): 0 if not appears, 1 if appears)}}

\item{type}{\code{c('tf', 'binary')} - type of TF scaling matrix}
}
\description{
Creates TermFrequency (tf) scaling matrix from Document-Term-Matrix
}
\examples{
\dontrun{
txt <- c(paste(letters[c(4:7, 5:12)], collapse = " "), paste(LETTERS[c(5:9, 7:12) ], collapse = " "))
corpus <- create_dict_corpus(txt,
   tokenizer = regexp_tokenizer
   )
dtm <- get_dtm(corpus, dictionary = letters[4:8], stopwords = letters[5:6] )
tf_scale_matrix <- dtm_get_tf(dtm, type = 'tf')
dtm_tf <- tf_scale_matrix \%*\% dtm
dtm_tf_idf <- dtm_get_tf \%*\% m \%*\% dtm_get_idf(dtm)
# The same result we can obtain using transform function with parameter type = 'tfidf'
dtm_tf_idf_2 <- transform(dtm, type='tfidf')
identical(dtm_tf_idf, dtm_tf_idf_2)
}
}

